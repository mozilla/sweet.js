#!/usr/bin/env node

var transform = require('babel-core').transformFromAst;

var argv = require('yargs')
  .usage('Usage: sjs [options] files ...')
  .demand(1)
  .alias('o', 'out-file')
  .alias('d', 'out-dir')
  .alias('b', 'no-babel')
  .describe('b', 'do not use babel backend')
  .describe('o', 'write output to file')
  .describe('d', 'write output to directory')
  .nargs('out-file', 1)
  .nargs('out-dir', 1)
  .help('h')
  .alias('h', 'help')
  .argv;

var path = require('path');
var fs   = require('fs');
var dir  = path.join(path.dirname(fs.realpathSync(__filename)), '../dist');
var sweetjs = require(dir + '/sweet.js');
var moduleResolver = require(dir + '/node-module-resolver').default;
var moduleLoader = require(dir + '/node-module-loader').default;

argv._.forEach(function (file) {
  var infile = fs.readFileSync(file, 'utf8');
  var fdir = path.dirname(fs.realpathSync(file));
  var output = sweetjs.compile(infile, {
    cwd: fdir,
    noBabel: argv.noBabel,
    transform: transform,
    filename: file,
    moduleResolver: moduleResolver,
    moduleLoader: moduleLoader
  });

  if (argv.outFile) {
    fs.writeFileSync(argv.outFile, output.code, 'utf8');
  } else if (argv.outDir) {
    fs.writeFileSync(path.join(argv.outDir, path.basename(file)), output.code, 'utf8');
  } else {
    console.log(output.code);
  }
});
